{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "TypeDescriptions": {
      "type": "object",
      "properties": {
        "typeIdentifier": {
          "type": "string"
        },
        "typeString": {
          "type": "string"
        }
      },
      "required": [
        "typeIdentifier"
      ],
      "additionalProperties": false
    },
    "AstNode": {
      "type": "object",
      "properties": {
        "constant": {
          "type": "boolean"
        },
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "canonicalName": {
          "type": "string"
        },
        "linearizedBaseContracts": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AstNode"
          }
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AstNode"
          }
        },
        "nodeType": {
          "type": "string"
        },
        "scope": {
          "type": "number"
        },
        "src": {
          "type": "string"
        },
        "stateVariable": {
          "type": "boolean"
        },
        "storageLocation": {
          "type": "string"
        },
        "typeDescriptions": {
          "$ref": "#/definitions/TypeDescriptions"
        },
        "typeName": {
          "$ref": "#/definitions/AstNode"
        },
        "expression": {
          "type": "object",
          "properties": {
            "referencedDeclaration": {}
          },
          "additionalProperties": false
        },
        "value": {
          "anyOf": [
            {
              "type": "null"
            },
            {}
          ]
        },
        "visibility": {
          "type": "string"
        },
        "stateMutability": {
          "$ref": "#/definitions/Mutability"
        },
        "kind": {
          "type": "string"
        },
        "hexValue": {
          "type": "string"
        },
        "referencedDeclaration": {},
        "parameters": {
          "type": "object",
          "properties": {
            "parameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AstNode"
              }
            }
          },
          "required": [
            "parameters"
          ],
          "additionalProperties": false
        },
        "returnParameters": {
          "type": "object",
          "properties": {
            "parameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AstNode"
              }
            }
          },
          "required": [
            "parameters"
          ],
          "additionalProperties": false
        },
        "parameterTypes": {
          "type": "object",
          "properties": {
            "parameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AstNode"
              }
            }
          },
          "required": [
            "parameters"
          ],
          "additionalProperties": false
        },
        "returnParameterTypes": {
          "type": "object",
          "properties": {
            "parameters": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AstNode"
              }
            }
          },
          "required": [
            "parameters"
          ],
          "additionalProperties": false
        },
        "baseType": {
          "$ref": "#/definitions/AstNode"
        },
        "keyType": {
          "$ref": "#/definitions/AstNode"
        },
        "valueType": {
          "$ref": "#/definitions/AstNode"
        },
        "payable": {
          "type": "boolean"
        },
        "indexed": {
          "type": "boolean"
        },
        "anonymous": {
          "type": "boolean"
        },
        "contractKind": {
          "$ref": "#/definitions/ContractKind"
        },
        "isConstructor": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "nodeType",
        "src",
        "typeDescriptions"
      ],
      "additionalProperties": false
    },
    "Mutability": {
      "type": "string",
      "enum": [
        "pure",
        "view",
        "nonpayable",
        "payable"
      ]
    },
    "ContractKind": {
      "type": "string",
      "enum": [
        "contract",
        "library",
        "interface"
      ]
    },
    "AstNodes": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/AstNode"
      }
    },
    "Scopes": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "sourceId": {
            "type": "string"
          },
          "parentId": {
            "type": [
              "number",
              "null"
            ]
          },
          "pointer": {
            "type": "string"
          },
          "variables": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                }
              },
              "required": [
                "name",
                "id"
              ],
              "additionalProperties": false
            }
          },
          "definition": {
            "$ref": "#/definitions/AstNode"
          }
        },
        "required": [
          "id",
          "sourceId",
          "parentId",
          "pointer"
        ],
        "additionalProperties": false
      }
    },
    "Abi": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/AbiEntry"
      }
    },
    "AbiEntry": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionAbiEntry"
        },
        {
          "$ref": "#/definitions/ConstructorAbiEntry"
        },
        {
          "$ref": "#/definitions/FallbackAbiEntry"
        },
        {
          "$ref": "#/definitions/ReceiveAbiEntry"
        },
        {
          "$ref": "#/definitions/EventAbiEntry"
        }
      ]
    },
    "FunctionAbiEntry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "function"
          ]
        },
        "name": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiParameter"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiParameter"
          }
        },
        "stateMutability": {
          "$ref": "#/definitions/Mutability"
        },
        "constant": {
          "type": "boolean"
        },
        "payable": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "name",
        "inputs",
        "outputs"
      ],
      "additionalProperties": false
    },
    "AbiParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "indexed": {
          "type": "boolean"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiParameter"
          }
        },
        "internalType": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "additionalProperties": false
    },
    "ConstructorAbiEntry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "constructor"
          ]
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiParameter"
          }
        },
        "stateMutability": {
          "type": "string",
          "enum": [
            "payable",
            "nonpayable"
          ]
        },
        "payable": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "inputs"
      ],
      "additionalProperties": false
    },
    "FallbackAbiEntry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "fallback"
          ]
        },
        "stateMutability": {
          "type": "string",
          "enum": [
            "payable",
            "nonpayable"
          ]
        },
        "payable": {
          "type": "boolean"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "ReceiveAbiEntry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "receive"
          ]
        },
        "stateMutability": {
          "type": "string",
          "enum": [
            "payable"
          ]
        },
        "payable": {
          "type": "boolean"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "EventAbiEntry": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "event"
          ]
        },
        "name": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiParameter"
          }
        },
        "anonymous": {
          "type": "boolean"
        }
      },
      "required": [
        "type",
        "name",
        "inputs",
        "anonymous"
      ],
      "additionalProperties": false
    },
    "FunctionAbiBySelectors": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/FunctionAbiEntry"
      }
    },
    "StorageLength": {
      "anyOf": [
        {
          "type": "object",
          "properties": {
            "bytes": {
              "type": "number"
            }
          },
          "required": [
            "bytes"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "words": {
              "type": "number"
            }
          },
          "required": [
            "words"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CalldataDecoding": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionDecoding"
        },
        {
          "$ref": "#/definitions/ConstructorDecoding"
        },
        {
          "$ref": "#/definitions/MessageDecoding"
        },
        {
          "$ref": "#/definitions/UnknownCallDecoding"
        },
        {
          "$ref": "#/definitions/UnknownCreationDecoding"
        }
      ],
      "description": "A type representing a transaction (calldata) decoding.  As you can see, these come in five types,\neach of which is documented separately."
    },
    "FunctionDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "function"
          ],
          "description": "The kind of decoding; indicates that this is a FunctionDecoding."
        },
        "class": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of contract that was called, as a Format.Types.ContractType."
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiArgument"
          },
          "description": "The list of decoded arguments to the function."
        },
        "abi": {
          "$ref": "#/definitions/FunctionAbiEntry",
          "description": "The ABI entry for the function that was called.  You can use this\nto extract the name, for instance."
        },
        "selector": {
          "type": "string",
          "description": "The selector for the function that was called, as a hexadecimal string."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "class",
        "arguments",
        "abi",
        "selector",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a transaction decoding for an ordinary function call to a known class;\nnot a constructor call, not a fallback call."
    },
    "ContractType": {
      "anyOf": [
        {
          "$ref": "#/definitions/ContractTypeNative%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractTypeForeign%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of a contract; used not just for actual values but wherever a contract type\nis needed\n\nContract types may be native (has Solidity info) or foreign (lacking Solidity info)."
    },
    "ContractTypeNative<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "contract"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "native"
          ]
        },
        "id": {
          "type": "string",
          "description": "Internal ID.  Format may change in future."
        },
        "typeName": {
          "type": "string"
        },
        "contractKind": {
          "$ref": "#/definitions/ContractKind"
        },
        "payable": {
          "type": "boolean",
          "description": "Indicates whether contract has payable fallback function"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "id",
        "typeName"
      ],
      "additionalProperties": false,
      "description": "Type of a contract with full Solidity info -- may be used for actual variables"
    },
    "ContractTypeForeign<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "contract"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "foreign"
          ]
        },
        "typeName": {
          "type": "string"
        },
        "contractKind": {
          "$ref": "#/definitions/ContractKind"
        },
        "payable": {
          "type": "boolean",
          "description": "Indicates whether contract has payable fallback function"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "typeName"
      ],
      "additionalProperties": false,
      "description": "Type of a contract w/o full Solidity info -- not used for actual variables"
    },
    "AbiArgument": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the parameter.  Excluded if the parameter is nameless."
        },
        "indexed": {
          "type": "boolean",
          "description": "Whether this is an indexed paramter.  Only included for event parameters."
        },
        "value": {
          "$ref": "#/definitions/Result",
          "description": "The decoded value of the argument.  Note that this is a [[Format.Values.Result|Format.Values.Result]], so it\nmay contain errors (although event decodings should typically not contain errors;\nsee the [[DecodedLog]] documentation for why)."
        }
      },
      "required": [
        "value"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoded argument passed to a transaction or event,\nor returned from a call."
    },
    "Result": {
      "anyOf": [
        {
          "$ref": "#/definitions/ElementaryResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ArrayResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MappingResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TupleResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MagicResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TypeResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionInternalResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "This is the overall Result type.  It may encode an actual value or an error."
    },
    "ElementaryResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UintResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IntResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BoolResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FixedResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UfixedResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An elementary value or error"
    },
    "UintResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UintValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UintErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An unsigned integer value or error"
    },
    "UintValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/UintType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asBN": {
              "type": "object",
              "additionalProperties": false
            },
            "rawAsBN": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "asBN"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An unsigned integer value"
    },
    "UintType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "uint"
          ]
        },
        "bits": {
          "type": "number"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "bits"
      ],
      "additionalProperties": false,
      "description": "Type of an unsigned integer"
    },
    "UintErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/UintType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/UintError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an unsigned integer"
    },
    "GenericError<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UserDefinedTypeNotFoundError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IndexedReferenceTypeError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ReadError%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A type-non-specific error"
    },
    "UserDefinedTypeNotFoundError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "UserDefinedTypeNotFoundError"
          ]
        },
        "type": {
          "$ref": "#/definitions/UserDefinedType%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "kind",
        "type"
      ],
      "additionalProperties": false,
      "description": "An error for when can't find the definition info for a user-defined type"
    },
    "UserDefinedType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ContractDefinedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractTypeNative%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructTypeGlobal%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumTypeGlobal%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "User-defined types"
    },
    "ContractDefinedType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/StructTypeLocal%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumTypeLocal%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Types defined inside contracts"
    },
    "StructTypeLocal<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "struct"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "local"
          ]
        },
        "id": {
          "type": "string",
          "description": "Internal ID.  Format may change in future."
        },
        "typeName": {
          "type": "string"
        },
        "definingContractName": {
          "type": "string"
        },
        "definingContract": {
          "$ref": "#/definitions/ContractTypeNative%3CDefaultFormatConfig%3E"
        },
        "memberTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameTypePair%3CDefaultFormatConfig%3E"
          },
          "description": "these must be in order"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "id",
        "typeName",
        "definingContractName"
      ],
      "additionalProperties": false,
      "description": "Local structs (defined in contracts)"
    },
    "NameTypePair<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "additionalProperties": false
    },
    "Type<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UintType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IntType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BoolType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FixedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UfixedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ArrayType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MappingType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MagicType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TypeType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TupleType%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Object representing a type"
    },
    "IntType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "int"
          ]
        },
        "bits": {
          "type": "number"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "bits"
      ],
      "additionalProperties": false,
      "description": "Type of a signed integer"
    },
    "BoolType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "bool"
          ]
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass"
      ],
      "additionalProperties": false,
      "description": "Type of a boolean"
    },
    "BytesType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/BytesTypeStatic%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesTypeDynamic%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of a bytestring (static or dynamic)"
    },
    "BytesTypeStatic<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "bytes"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "static"
          ]
        },
        "length": {
          "type": "number"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "length"
      ],
      "additionalProperties": false,
      "description": "Type of a static-length bytestring"
    },
    "BytesTypeDynamic<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "bytes"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "dynamic"
          ]
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "kind"
      ],
      "additionalProperties": false,
      "description": "Type of a dynamic-length bytestring"
    },
    "Location": {
      "type": "string",
      "enum": [
        "storage",
        "memory",
        "calldata"
      ]
    },
    "AddressType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/AddressTypeSpecific%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressTypeGeneral%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of an address"
    },
    "AddressTypeSpecific<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "address"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "specific"
          ]
        },
        "payable": {
          "type": "boolean"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "payable"
      ],
      "additionalProperties": false,
      "description": "Type of an address (with payability specified)"
    },
    "AddressTypeGeneral<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "address"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "general"
          ]
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "kind"
      ],
      "additionalProperties": false,
      "description": "Type of an address (with payability unspecified)"
    },
    "FixedType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "fixed"
          ]
        },
        "bits": {
          "type": "number"
        },
        "places": {
          "type": "number"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "bits",
        "places"
      ],
      "additionalProperties": false,
      "description": "Type of a signed fixed-point number"
    },
    "UfixedType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "ufixed"
          ]
        },
        "bits": {
          "type": "number"
        },
        "places": {
          "type": "number"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "bits",
        "places"
      ],
      "additionalProperties": false,
      "description": "Type of an unsigned fixed-point number"
    },
    "StringType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "string"
          ]
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass"
      ],
      "additionalProperties": false,
      "description": "Type of a string"
    },
    "ArrayType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ArrayTypeStatic%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ArrayTypeDynamic%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of an array"
    },
    "ArrayTypeStatic<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "length": {
          "type": "object",
          "additionalProperties": false
        },
        "typeClass": {
          "type": "string",
          "enum": [
            "array"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "static"
          ]
        },
        "baseType": {
          "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "baseType",
        "kind",
        "length",
        "typeClass"
      ],
      "description": "Type of a static-length array"
    },
    "ArrayTypeDynamic<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "array"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "dynamic"
          ]
        },
        "baseType": {
          "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "baseType"
      ],
      "additionalProperties": false,
      "description": "Type of a dynamic-length array"
    },
    "MappingType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "mapping"
          ]
        },
        "keyType": {
          "$ref": "#/definitions/ElementaryType%3CDefaultFormatConfig%3E"
        },
        "valueType": {
          "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
        },
        "location": {
          "type": "string",
          "enum": [
            "storage"
          ]
        }
      },
      "required": [
        "typeClass",
        "keyType",
        "valueType"
      ],
      "additionalProperties": false,
      "description": "Type of a mapping"
    },
    "ElementaryType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UintType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IntType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BoolType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FixedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UfixedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of an elementary value"
    },
    "EnumType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/EnumTypeLocal%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumTypeGlobal%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of an enum\n\nEnums may be local (defined in a contract) or global (defined outside of any contract)"
    },
    "EnumTypeLocal<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "enum"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "local"
          ]
        },
        "id": {
          "type": "string",
          "description": "Internal ID.  Format may change in future."
        },
        "typeName": {
          "type": "string"
        },
        "definingContractName": {
          "type": "string"
        },
        "definingContract": {
          "$ref": "#/definitions/ContractTypeNative%3CDefaultFormatConfig%3E"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "these must be in order"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "id",
        "typeName",
        "definingContractName"
      ],
      "additionalProperties": false,
      "description": "Local enum (defined in a contract)"
    },
    "EnumTypeGlobal<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "enum"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "global"
          ]
        },
        "id": {
          "type": "string",
          "description": "Internal ID.  Format may change in future."
        },
        "typeName": {
          "type": "string"
        },
        "options": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "these must be in order"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "id",
        "typeName"
      ],
      "additionalProperties": false,
      "description": "Global enum"
    },
    "ContractType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ContractTypeNative%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractTypeForeign%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of a contract; used not just for actual values but wherever a contract type\nis needed\n\nContract types may be native (has Solidity info) or foreign (lacking Solidity info)."
    },
    "FunctionType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionInternalType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalType%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of a function pointer (internal or external)"
    },
    "FunctionInternalType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "function"
          ]
        },
        "visibility": {
          "type": "string",
          "enum": [
            "internal"
          ]
        },
        "mutability": {
          "$ref": "#/definitions/Mutability"
        },
        "inputParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
          }
        },
        "outputParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
          }
        }
      },
      "required": [
        "typeClass",
        "visibility",
        "mutability",
        "inputParameterTypes",
        "outputParameterTypes"
      ],
      "additionalProperties": false,
      "description": "Type of an internal function pointer"
    },
    "FunctionExternalType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionExternalTypeSpecific%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalTypeGeneral%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of an external function pointer"
    },
    "FunctionExternalTypeSpecific<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "function"
          ]
        },
        "visibility": {
          "type": "string",
          "enum": [
            "external"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "specific"
          ]
        },
        "mutability": {
          "$ref": "#/definitions/Mutability"
        },
        "inputParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
          }
        },
        "outputParameterTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
          }
        }
      },
      "required": [
        "typeClass",
        "visibility",
        "kind",
        "mutability",
        "inputParameterTypes",
        "outputParameterTypes"
      ],
      "additionalProperties": false,
      "description": "Type of an external function pointer (full Solidity type)"
    },
    "FunctionExternalTypeGeneral<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "function"
          ]
        },
        "visibility": {
          "type": "string",
          "enum": [
            "external"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "general"
          ]
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "visibility",
        "kind"
      ],
      "additionalProperties": false,
      "description": "Type of an external function pointer (general ABI type)"
    },
    "StructType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/StructTypeLocal%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructTypeGlobal%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of a struct\n\nStructs may be local (defined in a contract) or global (defined outside of any contract)"
    },
    "StructTypeGlobal<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "struct"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "global"
          ]
        },
        "id": {
          "type": "string",
          "description": "Internal ID.  Format may change in future."
        },
        "typeName": {
          "type": "string"
        },
        "memberTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameTypePair%3CDefaultFormatConfig%3E"
          },
          "description": "these must be in order"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      },
      "required": [
        "typeClass",
        "kind",
        "id",
        "typeName"
      ],
      "additionalProperties": false,
      "description": "Global structs"
    },
    "MagicType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "magic"
          ]
        },
        "variable": {
          "$ref": "#/definitions/MagicVariableName"
        },
        "memberTypes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
          }
        }
      },
      "required": [
        "typeClass",
        "variable"
      ],
      "additionalProperties": false,
      "description": "Type of a magic variable"
    },
    "MagicVariableName": {
      "type": "string",
      "enum": [
        "message",
        "block",
        "transaction"
      ]
    },
    "TypeType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "type"
          ]
        },
        "type": {
          "$ref": "#/definitions/ContractTypeNative%3CDefaultFormatConfig%3E"
        },
        "stateVariableTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameTypePair%3CDefaultFormatConfig%3E"
          },
          "description": "these must be in order, and must only include\n**non-inherited** state variables"
        }
      },
      "required": [
        "typeClass",
        "type"
      ],
      "additionalProperties": false,
      "description": "Type of a type!  This is currently only used for contract types, but\nmay expand in the future."
    },
    "TupleType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "tuple"
          ]
        },
        "memberTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionallyNamedType%3CDefaultFormatConfig%3E"
          }
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "memberTypes"
      ],
      "additionalProperties": false,
      "description": "Type of a tuple (for use in ABI)"
    },
    "OptionallyNamedType<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type"
      ],
      "additionalProperties": false
    },
    "IndexedReferenceTypeError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "IndexedReferenceTypeError"
          ]
        },
        "type": {
          "anyOf": [
            {
              "$ref": "#/definitions/ReferenceType%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/TupleType%3CDefaultFormatConfig%3E"
            }
          ]
        },
        "raw": {
          "type": "string",
          "description": "hex string"
        }
      },
      "required": [
        "kind",
        "type",
        "raw"
      ],
      "additionalProperties": false,
      "description": "Used when decoding an indexed parameter of reference (or tuple) type.  These\ncan't meaningfully be decoded, so instead they decode to an error, sorry."
    },
    "ReferenceType<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ArrayType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MappingType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesTypeDynamic%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Reference types"
    },
    "ReadError<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UnsupportedConstantError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ReadErrorStack%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ReadErrorBytes%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ReadErrorStorage%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A read error"
    },
    "UnsupportedConstantError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "UnsupportedConstantError"
          ]
        },
        "definition": {
          "$ref": "#/definitions/AstNode"
        }
      },
      "required": [
        "kind",
        "definition"
      ],
      "additionalProperties": false,
      "description": "An error for an unsupported type of constant (this counts as a read error)"
    },
    "ReadErrorStack<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "ReadErrorStack"
          ]
        },
        "from": {
          "type": "number"
        },
        "to": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "from",
        "to"
      ],
      "additionalProperties": false,
      "description": "Read error on the stack"
    },
    "ReadErrorBytes<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "ReadErrorBytes"
          ]
        },
        "location": {
          "$ref": "#/definitions/BytesLocation"
        },
        "start": {
          "type": "number"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "location",
        "start",
        "length"
      ],
      "additionalProperties": false,
      "description": "Read error in a byte-based location (memory, calldata, etc)"
    },
    "BytesLocation": {
      "type": "string",
      "enum": [
        "memory",
        "calldata",
        "eventdata",
        "returndata"
      ],
      "description": "A byte-based location"
    },
    "ReadErrorStorage<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "ReadErrorStorage"
          ]
        },
        "range": {
          "$ref": "#/definitions/Range%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "kind",
        "range"
      ],
      "additionalProperties": false,
      "description": "Read error in storage"
    },
    "Range<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/StoragePosition%3CDefaultFormatConfig%3E"
        },
        "to": {
          "$ref": "#/definitions/StoragePosition%3CDefaultFormatConfig%3E"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "from"
      ],
      "additionalProperties": false
    },
    "StoragePosition<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "slot": {
          "$ref": "#/definitions/Slot%3CDefaultFormatConfig%3E"
        },
        "index": {
          "type": "number"
        }
      },
      "required": [
        "slot",
        "index"
      ],
      "additionalProperties": false
    },
    "Slot<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "offset": {
          "type": "object",
          "additionalProperties": false
        },
        "key": {
          "$ref": "#/definitions/ElementaryValue%3CDefaultFormatConfig%3E"
        },
        "path": {
          "$ref": "#/definitions/Slot%3CDefaultFormatConfig%3E"
        },
        "hashPath": {
          "type": "boolean"
        }
      },
      "required": [
        "offset"
      ]
    },
    "ElementaryValue<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UintValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IntValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BoolValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FixedValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UfixedValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractValue%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An elementary value"
    },
    "IntValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/IntType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asBN": {
              "type": "object",
              "additionalProperties": false
            },
            "rawAsBN": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "asBN"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A signed integer value"
    },
    "BoolValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BoolType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asBoolean": {
              "type": "boolean"
            }
          },
          "required": [
            "asBoolean"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A boolean value"
    },
    "BytesValue<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/BytesStaticValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesDynamicValue%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A bytestring value (static or dynamic)"
    },
    "BytesStaticValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BytesTypeStatic%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asHex": {
              "type": "string",
              "description": "hex-formatted, with leading \"0x\""
            },
            "rawAsHex": {
              "type": "string"
            }
          },
          "required": [
            "asHex"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A bytestring value (static length)"
    },
    "BytesDynamicValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BytesTypeDynamic%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asHex": {
              "type": "string",
              "description": "hex-formatted, with leading \"0x\""
            }
          },
          "required": [
            "asHex"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A bytestring value (dynamic length)"
    },
    "AddressValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AddressType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asAddress": {
              "type": "string",
              "description": "has leading \"0x\" and is checksum-cased"
            },
            "rawAsHex": {
              "type": "string",
              "description": "just a hex string, so no checksum"
            }
          },
          "required": [
            "asAddress"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An address value"
    },
    "StringValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/StringType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "$ref": "#/definitions/StringValueInfo"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A string value; see [[StringValueInfo]] for more detail"
    },
    "StringValueInfo": {
      "anyOf": [
        {
          "$ref": "#/definitions/StringValueInfoValid"
        },
        {
          "$ref": "#/definitions/StringValueInfoMalformed"
        }
      ],
      "description": "These come in two types: valid strings and malformed strings."
    },
    "StringValueInfoValid": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "valid"
          ]
        },
        "asString": {
          "type": "string"
        }
      },
      "required": [
        "kind",
        "asString"
      ],
      "additionalProperties": false,
      "description": "This type of StringValueInfo represents a valid UTF-8 string."
    },
    "StringValueInfoMalformed": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "malformed"
          ]
        },
        "asHex": {
          "type": "string",
          "description": "hex-formatted, with leading \"0x\""
        }
      },
      "required": [
        "kind",
        "asHex"
      ],
      "additionalProperties": false,
      "description": "This type of StringValueInfo represents a malformed string."
    },
    "FixedValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FixedType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asBig": {
              "$ref": "#/definitions/Big"
            },
            "rawAsBig": {
              "$ref": "#/definitions/Big"
            }
          },
          "required": [
            "asBig"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A signed fixed-point value"
    },
    "Big": {
      "type": "object",
      "properties": {
        "c": {
          "type": "array",
          "items": {
            "type": "number"
          },
          "description": "Returns an array of single digits"
        },
        "e": {
          "type": "number",
          "description": "Returns the exponent, Integer, -1e+6 to 1e+6 inclusive"
        },
        "s": {
          "type": "number",
          "description": "Returns the sign, -1 or 1"
        }
      },
      "required": [
        "c",
        "e",
        "s"
      ],
      "additionalProperties": false
    },
    "UfixedValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/UfixedType"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "properties": {
            "asBig": {
              "$ref": "#/definitions/Big"
            },
            "rawAsBig": {
              "$ref": "#/definitions/Big"
            }
          },
          "required": [
            "asBig"
          ],
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An unsigned fixed-point value"
    },
    "UfixedType": {
      "type": "object",
      "properties": {
        "typeClass": {
          "type": "string",
          "enum": [
            "ufixed"
          ]
        },
        "bits": {
          "type": "number"
        },
        "places": {
          "type": "number"
        },
        "typeHint": {
          "type": "string"
        }
      },
      "required": [
        "typeClass",
        "bits",
        "places"
      ],
      "additionalProperties": false,
      "description": "Type of an unsigned fixed-point number"
    },
    "EnumValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/EnumType"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "numericAsBN": {
              "type": "object",
              "additionalProperties": false,
              "description": "the numeric value of the enum"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name",
            "numericAsBN"
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An enum value"
    },
    "EnumType": {
      "anyOf": [
        {
          "$ref": "#/definitions/EnumTypeLocal%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumTypeGlobal%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Type of an enum\n\nEnums may be local (defined in a contract) or global (defined outside of any contract)"
    },
    "ContractValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "$ref": "#/definitions/ContractValueInfo%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A contract value; see [[ContractValueInfo]] for more detail"
    },
    "ContractValueInfo<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ContractValueInfoKnown%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractValueInfoUnknown"
        }
      ],
      "description": "There are two types -- one for contracts whose class we can identify, and one\nfor when we can't identify the class."
    },
    "ContractValueInfoKnown<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "known"
          ]
        },
        "address": {
          "type": "string",
          "description": "formatted as address (leading \"0x\", checksum-cased);\nnote that this is not an AddressResult!"
        },
        "rawAddress": {
          "type": "string",
          "description": "this is just a hexstring; no checksum (also may have padding beforehand)"
        },
        "class": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "kind",
        "address",
        "class"
      ],
      "additionalProperties": false,
      "description": "This type of ContractValueInfo is used when we can identify the class."
    },
    "ContractValueInfoUnknown": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "unknown"
          ]
        },
        "address": {
          "type": "string",
          "description": "formatted as address (leading \"0x\", checksum-cased);\nnote that this is not an AddressResult!"
        },
        "rawAddress": {
          "type": "string",
          "description": "this is just a hexstring; no checksum (also may have padding beforehand)"
        }
      },
      "required": [
        "kind",
        "address"
      ],
      "additionalProperties": false,
      "description": "This type of ContractValueInfo is used when we can't identify the class."
    },
    "UintError<DefaultFormatConfig>": {
      "$ref": "#/definitions/UintPaddingError%3CDefaultFormatConfig%3E",
      "description": "A uint-specific error"
    },
    "UintPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "UintPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for an unsigned integer (note padding is not always checked)"
    },
    "IntResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/IntValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IntErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A signed integer value or error"
    },
    "IntErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/IntType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/IntError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a signed integer"
    },
    "IntError<DefaultFormatConfig>": {
      "$ref": "#/definitions/IntPaddingError%3CDefaultFormatConfig%3E",
      "description": "An int-specific error"
    },
    "IntPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "IntPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for a signed integer (note padding is not always checked)"
    },
    "BoolResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/BoolValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BoolErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A boolean value or error"
    },
    "BoolErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BoolType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/BoolError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a boolean"
    },
    "BoolError<DefaultFormatConfig>": {
      "$ref": "#/definitions/BoolOutOfRangeError%3CDefaultFormatConfig%3E",
      "description": "A bool-specific error"
    },
    "BoolOutOfRangeError<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rawAsBN": {
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "type": "string",
          "enum": [
            "BoolOutOfRangeError"
          ]
        }
      },
      "required": [
        "kind",
        "rawAsBN"
      ],
      "description": "The bool is neither 0 nor 1"
    },
    "BytesResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/BytesStaticResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesDynamicResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A bytestring value or error (static or dynamic)"
    },
    "BytesStaticResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/BytesStaticValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesStaticErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A bytestring value or error (static-length)"
    },
    "BytesStaticErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BytesTypeStatic%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/BytesStaticError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a static-length bytestring"
    },
    "BytesStaticError<DefaultFormatConfig>": {
      "$ref": "#/definitions/BytesPaddingError%3CDefaultFormatConfig%3E",
      "description": "A static-bytestring-specific error"
    },
    "BytesPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "BytesPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for a static-length bytestring (note padding is not always checked)"
    },
    "BytesDynamicResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/BytesDynamicValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesDynamicErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A bytestring value or error (dynamic-length)"
    },
    "BytesDynamicErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/BytesTypeDynamic%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/BytesDynamicError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a dynamic-length bytestring"
    },
    "BytesDynamicError<DefaultFormatConfig>": {
      "$ref": "#/definitions/DynamicDataImplementationError%3CDefaultFormatConfig%3E",
      "description": "A dynamic-bytestring-specific error"
    },
    "DynamicDataImplementationError<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/OverlongArraysAndStringsNotImplementedError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/OverlargePointersNotImplementedError%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An error resulting from overlarge length or pointer values"
    },
    "OverlongArraysAndStringsNotImplementedError<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "lengthAsBN": {
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "type": "string",
          "enum": [
            "OverlongArraysAndStringsNotImplementedError"
          ]
        },
        "dataLength": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "lengthAsBN"
      ],
      "description": "Error for array/string/bytestring having length bigger than a JS number"
    },
    "OverlargePointersNotImplementedError<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "pointerAsBN": {
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "type": "string",
          "enum": [
            "OverlargePointersNotImplementedError"
          ]
        }
      },
      "required": [
        "kind",
        "pointerAsBN"
      ],
      "description": "Error for dynamic type being represented by pointer bigger than a JS number"
    },
    "AddressResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/AddressValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An address value or error"
    },
    "AddressErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AddressType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/AddressError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an address"
    },
    "AddressError<DefaultFormatConfig>": {
      "$ref": "#/definitions/AddressPaddingError%3CDefaultFormatConfig%3E",
      "description": "A address-specific error"
    },
    "AddressPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string; no checksum"
        },
        "kind": {
          "type": "string",
          "enum": [
            "AddressPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for an address (note padding is not always checked)"
    },
    "StringResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/StringValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A string value or error"
    },
    "StringErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/StringType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/StringError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a string"
    },
    "StringError<DefaultFormatConfig>": {
      "$ref": "#/definitions/DynamicDataImplementationError%3CDefaultFormatConfig%3E",
      "description": "A string-specific error"
    },
    "FixedResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FixedValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FixedErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A signed fixed-point value or error"
    },
    "FixedErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FixedType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/FixedError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a signed fixed-point number"
    },
    "FixedError<DefaultFormatConfig>": {
      "$ref": "#/definitions/FixedPaddingError%3CDefaultFormatConfig%3E",
      "description": "A fixed-specific error"
    },
    "FixedPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "FixedPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for a signed fixed-point number (note padding is not always checked)"
    },
    "UfixedResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/UfixedValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UfixedErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An unsigned fixed-point value or error"
    },
    "UfixedErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/UfixedType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/UfixedError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an unsigned fixed-point number"
    },
    "UfixedError<DefaultFormatConfig>": {
      "$ref": "#/definitions/UfixedPaddingError%3CDefaultFormatConfig%3E",
      "description": "A ufixed-specific error"
    },
    "UfixedPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "UfixedPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for an unsigned fixed-point number (note padding is not always checked)"
    },
    "EnumResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/EnumValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An enum value or error"
    },
    "EnumErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/EnumType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/EnumError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an enum"
    },
    "EnumError<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/EnumOutOfRangeError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumNotFoundDecodingError%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An enum-specific error"
    },
    "EnumOutOfRangeError<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rawAsBN": {
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "type": "string",
          "enum": [
            "EnumOutOfRangeError"
          ]
        },
        "type": {
          "$ref": "#/definitions/EnumType%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "kind",
        "rawAsBN",
        "type"
      ],
      "description": "The enum is out of range"
    },
    "EnumNotFoundDecodingError<DefaultFormatConfig>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "rawAsBN": {
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "type": "string",
          "enum": [
            "EnumNotFoundDecodingError"
          ]
        },
        "type": {
          "$ref": "#/definitions/EnumType%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "kind",
        "rawAsBN",
        "type"
      ],
      "description": "The enum type definition could not be located"
    },
    "ContractResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ContractValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A contract value or error"
    },
    "ContractErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/ContractError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a contract"
    },
    "ContractError<DefaultFormatConfig>": {
      "$ref": "#/definitions/ContractPaddingError%3CDefaultFormatConfig%3E",
      "description": "A contract-specific error"
    },
    "ContractPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "ContractPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for contract (note padding is not always checked)"
    },
    "ArrayResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ArrayValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ArrayErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An array value or error"
    },
    "ArrayValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ArrayType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "reference": {
          "type": "number",
          "description": "will be used in the future for circular vales"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Result%3CDefaultFormatConfig%3E"
          }
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An array value (may contain errors!)"
    },
    "Result<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/ElementaryResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ArrayResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MappingResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TupleResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MagicResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TypeResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalResult%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionInternalResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "This is the overall Result type.  It may encode an actual value or an error."
    },
    "MappingResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/MappingValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MappingErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A mapping value or error"
    },
    "MappingValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/MappingType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair%3CDefaultFormatConfig%3E"
          },
          "description": "order is irrelevant; also note keys must be values, not errors"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A mapping value (may contain errors!)"
    },
    "KeyValuePair<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/ElementaryValue%3CDefaultFormatConfig%3E"
        },
        "value": {
          "$ref": "#/definitions/Result%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "key",
        "value"
      ],
      "additionalProperties": false
    },
    "MappingErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/MappingType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a mapping"
    },
    "StructResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/StructValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A struct value or error"
    },
    "StructValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/StructType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "reference": {
          "type": "number",
          "description": "will be used in the future for circular vales"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair%3CDefaultFormatConfig%3E"
          },
          "description": "these must be stored in order!\nmoreover, any mappings *must* be included, even\nif this is a memory struct (such mappings will be empty)"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A struct value (may contain errors!)"
    },
    "NameValuePair<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Result%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "additionalProperties": false
    },
    "StructErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/StructType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/StructError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a struct"
    },
    "StructError<DefaultFormatConfig>": {
      "$ref": "#/definitions/DynamicDataImplementationError%3CDefaultFormatConfig%3E",
      "description": "A struct-specific error"
    },
    "TupleResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/TupleValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TupleErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A tuple value or error"
    },
    "TupleValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TupleType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OptionallyNamedValue%3CDefaultFormatConfig%3E"
          }
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A tuple value (may contain errors!)"
    },
    "OptionallyNamedValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Result%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "value"
      ],
      "additionalProperties": false
    },
    "TupleErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TupleType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/TupleError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a tuple"
    },
    "TupleError<DefaultFormatConfig>": {
      "$ref": "#/definitions/DynamicDataImplementationError%3CDefaultFormatConfig%3E",
      "description": "A tuple-specific error"
    },
    "MagicResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/MagicValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MagicErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A magic variable's value (or error)"
    },
    "MagicValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/MagicType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Result%3CDefaultFormatConfig%3E"
          }
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A magic variable's value (may contain errors?)"
    },
    "MagicErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/MagicType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a magic variable"
    },
    "TypeResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/TypeValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TypeErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "A type's value (or error)"
    },
    "TypeValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair%3CDefaultFormatConfig%3E"
          },
          "description": "these must be stored in order!"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "A type's value -- for now, we consider the value of a contract type to\nconsist of the values of its non-inherited state variables in the current\ncontext.  May contain errors."
    },
    "TypeErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/TypeType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for a type"
    },
    "FunctionExternalResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionExternalValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An external function pointer value or error"
    },
    "FunctionExternalValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FunctionExternalType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "$ref": "#/definitions/FunctionExternalValueInfo%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An external function pointer value; see [[FunctionExternalValueInfo]] for more detail"
    },
    "FunctionExternalValueInfo<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionExternalValueInfoKnown%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalValueInfoInvalid%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalValueInfoUnknown"
        }
      ],
      "description": "External function values come in 3 types:\n1. known function of known class\n2. known class, but can't locate function\n3. can't determine class"
    },
    "FunctionExternalValueInfoKnown<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "known"
          ]
        },
        "contract": {
          "$ref": "#/definitions/ContractValueInfoKnown%3CDefaultFormatConfig%3E"
        },
        "selector": {
          "type": "string",
          "description": "formatted as a hex string"
        },
        "abi": {
          "$ref": "#/definitions/FunctionAbiEntry"
        }
      },
      "required": [
        "kind",
        "contract",
        "selector",
        "abi"
      ],
      "additionalProperties": false,
      "description": "This type of FunctionExternalValueInfo is used for a known function of a known class."
    },
    "FunctionExternalValueInfoInvalid<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "invalid"
          ]
        },
        "contract": {
          "$ref": "#/definitions/ContractValueInfoKnown%3CDefaultFormatConfig%3E"
        },
        "selector": {
          "type": "string",
          "description": "formatted as a hex string"
        }
      },
      "required": [
        "kind",
        "contract",
        "selector"
      ],
      "additionalProperties": false,
      "description": "This type of FunctionExternalValueInfo is used when we can identify the class but can't locate the function."
    },
    "FunctionExternalValueInfoUnknown": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "unknown"
          ]
        },
        "contract": {
          "$ref": "#/definitions/ContractValueInfoUnknown"
        },
        "selector": {
          "type": "string",
          "description": "formatted as a hex string"
        }
      },
      "required": [
        "kind",
        "contract",
        "selector"
      ],
      "additionalProperties": false,
      "description": "This type of FunctionExternalValueInfo is used when we can't even locate the class."
    },
    "FunctionExternalErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FunctionExternalType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/FunctionExternalError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an external function"
    },
    "FunctionExternalError<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionExternalNonStackPaddingError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionExternalStackPaddingError%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An external-function specific error"
    },
    "FunctionExternalNonStackPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "FunctionExternalNonStackPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "This error kind represents a padding error for an external function pointer located anywhere other than the stack."
    },
    "FunctionExternalStackPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "rawAddress": {
          "type": "string",
          "description": "hex string (no checksum; also a full word long)"
        },
        "rawSelector": {
          "type": "string",
          "description": "hex string (but a full word long)"
        },
        "kind": {
          "type": "string",
          "enum": [
            "FunctionExternalStackPaddingError"
          ]
        }
      },
      "required": [
        "rawAddress",
        "rawSelector",
        "kind"
      ],
      "additionalProperties": false,
      "description": "This error kind represents a padding error for external function pointer located on the stack."
    },
    "FunctionInternalResult<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionInternalValue%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionInternalErrorResult%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An internal function pointer value or error"
    },
    "FunctionInternalValue<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FunctionInternalType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "value"
          ]
        },
        "value": {
          "$ref": "#/definitions/FunctionInternalValueInfo%3CDefaultFormatConfig%3E"
        }
      },
      "required": [
        "type",
        "kind",
        "value"
      ],
      "additionalProperties": false,
      "description": "An internal function pointer value; see [[FunctionInternalValueInfo]] for more detail"
    },
    "FunctionInternalValueInfo<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionInternalValueInfoKnown%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionInternalValueInfoException%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionInternalValueInfoUnknown%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Internal functions come in three types:\n1. An actual function,\n2. A default value,\n3. A special value to indicate that decoding internal functions isn't supported in this context."
    },
    "FunctionInternalValueInfoKnown<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "function"
          ]
        },
        "context": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "deployedProgramCounter": {
          "type": "number"
        },
        "constructorProgramCounter": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "definedIn": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "mutability": {
          "$ref": "#/definitions/Mutability"
        }
      },
      "required": [
        "kind",
        "context",
        "deployedProgramCounter",
        "constructorProgramCounter",
        "name",
        "definedIn"
      ],
      "additionalProperties": false,
      "description": "This type of FunctionInternalValueInfo is used for an actual internal function."
    },
    "FunctionInternalValueInfoException<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "exception"
          ]
        },
        "context": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "deployedProgramCounter": {
          "type": "number"
        },
        "constructorProgramCounter": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "context",
        "deployedProgramCounter",
        "constructorProgramCounter"
      ],
      "additionalProperties": false,
      "description": "A default value -- internal functions have two default values\ndepending on whether they live in storage or elsewhere.\nIn storage the default value is 0 for both program counters.\nElsewhere they're both nonzero."
    },
    "FunctionInternalValueInfoUnknown<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "unknown"
          ]
        },
        "context": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "deployedProgramCounter": {
          "type": "number"
        },
        "constructorProgramCounter": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "context",
        "deployedProgramCounter",
        "constructorProgramCounter"
      ],
      "additionalProperties": false,
      "description": "This type is used when decoding internal functions from the high-level\ndecoding interface, which presently doesn't support detailed decoding of\ninternal functions.  (The debugger, however, supports it!  You can get this\ndetailed information in the debugger!)  You'll still get the program counter\nvalues, but further information will be absent.  Note you'll get this even\nif really it should decode to an error, because the decoding interface\ndoesn't have the information to determine that it's an error."
    },
    "FunctionInternalErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/FunctionInternalType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/FunctionInternalError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an internal function"
    },
    "FunctionInternalError<DefaultFormatConfig>": {
      "anyOf": [
        {
          "$ref": "#/definitions/FunctionInternalPaddingError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/NoSuchInternalFunctionError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/DeployedFunctionInConstructorError%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MalformedInternalFunctionError%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "An internal-function specific error"
    },
    "FunctionInternalPaddingError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "description": "hex string"
        },
        "kind": {
          "type": "string",
          "enum": [
            "FunctionInternalPaddingError"
          ]
        }
      },
      "required": [
        "raw",
        "kind"
      ],
      "additionalProperties": false,
      "description": "A padding error for an internal function"
    },
    "NoSuchInternalFunctionError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "NoSuchInternalFunctionError"
          ]
        },
        "context": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "deployedProgramCounter": {
          "type": "number"
        },
        "constructorProgramCounter": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "context",
        "deployedProgramCounter",
        "constructorProgramCounter"
      ],
      "additionalProperties": false,
      "description": "Indicates that the function pointer being decoded\nfails to point to a valid function, and also is not one of the\ndefault values"
    },
    "DeployedFunctionInConstructorError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "DeployedFunctionInConstructorError"
          ]
        },
        "context": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "deployedProgramCounter": {
          "type": "number"
        },
        "constructorProgramCounter": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "context",
        "deployedProgramCounter",
        "constructorProgramCounter"
      ],
      "additionalProperties": false,
      "description": "Indicates that this is a deployed-style pointer,\ndespite the fact that you're in a constructor"
    },
    "MalformedInternalFunctionError<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "MalformedInternalFunctionError"
          ]
        },
        "context": {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        "deployedProgramCounter": {
          "type": "number"
        },
        "constructorProgramCounter": {
          "type": "number"
        }
      },
      "required": [
        "kind",
        "context",
        "deployedProgramCounter",
        "constructorProgramCounter"
      ],
      "additionalProperties": false,
      "description": "Used when the deployed PC is zero but the constructor PC\nis nonzero"
    },
    "ArrayErrorResult<DefaultFormatConfig>": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/ArrayType%3CDefaultFormatConfig%3E"
        },
        "kind": {
          "type": "string",
          "enum": [
            "error"
          ]
        },
        "error": {
          "anyOf": [
            {
              "$ref": "#/definitions/GenericError%3CDefaultFormatConfig%3E"
            },
            {
              "$ref": "#/definitions/ArrayError%3CDefaultFormatConfig%3E"
            }
          ]
        }
      },
      "required": [
        "type",
        "kind",
        "error"
      ],
      "additionalProperties": false,
      "description": "An error result for an array"
    },
    "ArrayError<DefaultFormatConfig>": {
      "$ref": "#/definitions/DynamicDataImplementationError%3CDefaultFormatConfig%3E",
      "description": "An arrray-specific error"
    },
    "DecodingMode": {
      "type": "string",
      "enum": [
        "full",
        "abi"
      ],
      "description": "This is a type for recording what decoding mode a given decoding was produced in.  There are two\ndecoding modes, full mode and ABI mode.  In ABI mode, decoding is done purely based on the ABI JSON.\nFull mode, by contrast, additionally uses AST information to produce a more informative decoding.\nFor more on full mode and ABI mode, see the notes on [Decoding modes](../#decoding-modes)."
    },
    "ConstructorDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "constructor"
          ],
          "description": "The kind of decoding; indicates that this is a ConstructorDecoding."
        },
        "class": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of contract being constructed, as a Format.Types.ContractType."
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiArgument"
          },
          "description": "The list of decoded arguments to the constructor.  This will be empty for a\ndefault constructor."
        },
        "abi": {
          "$ref": "#/definitions/ConstructorAbiEntry",
          "description": "The ABI entry for the constructor that was called.  Note that although\ndefault constructors don't actually get an ABI entry, we still return an\nABI entry regardless in that case."
        },
        "bytecode": {
          "type": "string",
          "description": "The bytecode of the constructor that was called."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "class",
        "arguments",
        "abi",
        "bytecode",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a transaction decoding for a constructor call.\nIt's even possible to decode a library constructor call with this.\n\nNOTE: In the future, this type will also contain information about\nany linked libraries the contract being constructed uses.  However,\nthis is not implemented at present."
    },
    "MessageDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "message"
          ],
          "description": "The kind of decoding; indicates that this is a MessageDecoding."
        },
        "class": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of contract that was called, as a Format.Types.ContractType."
        },
        "abi": {
          "anyOf": [
            {
              "$ref": "#/definitions/FallbackAbiEntry"
            },
            {
              "$ref": "#/definitions/ReceiveAbiEntry"
            },
            {
              "type": "null"
            }
          ],
          "description": "The ABI entry for the contract's fallback or receive function that would\nhandle this message; will be null if there is none."
        },
        "data": {
          "type": "string",
          "description": "The data that was sent to the contract."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "class",
        "abi",
        "data",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding for a call to a known class that does not appear\nto be a function call, i.e., one that will result in the fallback function being invoked\nif there is one."
    },
    "UnknownCallDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "unknown"
          ],
          "description": "The kind of decoding; indicates that this is an UnknownDecoding."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        },
        "data": {
          "type": "string",
          "description": "The data that was sent to the contract."
        }
      },
      "required": [
        "kind",
        "decodingMode",
        "data"
      ],
      "additionalProperties": false,
      "description": "This type represents a function call to an unknown class.  In this case,\nit's simply not possible to return much information."
    },
    "UnknownCreationDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "create"
          ],
          "description": "The kind of decoding; indicates that this is an UnknownCreationDecoding."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        },
        "bytecode": {
          "type": "string",
          "description": "The bytecode of the contract creation."
        }
      },
      "required": [
        "kind",
        "decodingMode",
        "bytecode"
      ],
      "additionalProperties": false,
      "description": "This type represents a contract creation for an unknown class. In this case,\nit's simply not possible to return much information."
    },
    "LogDecoding": {
      "anyOf": [
        {
          "$ref": "#/definitions/EventDecoding"
        },
        {
          "$ref": "#/definitions/AnonymousDecoding"
        }
      ],
      "description": "A type representing a log (event) decoding.  As you can see, these come in two types, each of which\nis documented separately."
    },
    "EventDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "event"
          ],
          "description": "The kind of decoding; indicates that this is an EventDecoding."
        },
        "class": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of the contract that (according to this decoding) emitted the event, as a Format.Types.ContractType.\nThis may be a library!  When a library emits an event, the EVM records it as the calling contract\nhaving emitted the event, but we decode it as if the library emitted the event, for clarity.\n(The address of the contract the EVM thinks emitted the event can of course be found in the original log.)"
        },
        "definedIn": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of the contract that (according to this decoding) defined the event, as a Format.Types.ContractType.\nMay be omitted if we can't determine it, as may occur in ABI mode."
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiArgument"
          },
          "description": "The list of decoded arguments to the event."
        },
        "abi": {
          "$ref": "#/definitions/EventAbiEntry",
          "description": "The ABI entry for the event.  You can use this to extract the name, for\ninstance."
        },
        "selector": {
          "type": "string",
          "description": "The selector for the event, as a hexadecimal string."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "class",
        "arguments",
        "abi",
        "selector",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of a log as a non-anonymous event."
    },
    "AnonymousDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "anonymous"
          ],
          "description": "The kind of decoding; indicates that this is an AnonymousDecoding."
        },
        "class": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of the contract that (according to this decoding) emitted the event, as a Format.Types.ContractType.\nThis may be a library!  When a library emits an event, the EVM records it as the calling contract\nhaving emitted the event, but we decode it as if the library emitted the event, for clarity.\n(The address of the contract the EVM thinks emitted the event can of course be found in the original log.)"
        },
        "definedIn": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of the contract that (according to this decoding) defined the event, as a Format.Types.ContractType.\nMay be omitted if we can't determine it, as may occur in ABI mode."
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiArgument"
          },
          "description": "The list of decoded arguments to the event."
        },
        "abi": {
          "$ref": "#/definitions/EventAbiEntry",
          "description": "The ABI entry for the event.  You can use this to extract the name, for\ninstance."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "class",
        "arguments",
        "abi",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of a log as an anonymous event."
    },
    "ReturndataDecoding": {
      "anyOf": [
        {
          "$ref": "#/definitions/ReturnDecoding"
        },
        {
          "$ref": "#/definitions/BytecodeDecoding"
        },
        {
          "$ref": "#/definitions/UnknownBytecodeDecoding"
        },
        {
          "$ref": "#/definitions/SelfDestructDecoding"
        },
        {
          "$ref": "#/definitions/RevertMessageDecoding"
        },
        {
          "$ref": "#/definitions/EmptyFailureDecoding"
        }
      ],
      "description": "A type representing a returndata (return value or revert message) decoding.\nAs you can see, these come in six types, each of which is documented\nseparately."
    },
    "ReturnDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "return"
          ],
          "description": "The kind of decoding; indicates that this is a ReturnDecoding."
        },
        "status": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Indicates that this kind of decoding indicates a successful return."
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiArgument"
          },
          "description": "The list of decoded return values from the function."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "status",
        "arguments",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of the return data as a collection of\nreturn values from a successful call."
    },
    "BytecodeDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "bytecode"
          ],
          "description": "The kind of decoding; indicates that this is a BytecodeDecoding."
        },
        "status": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Indicates that this kind of decoding indicates a successful return."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        },
        "class": {
          "$ref": "#/definitions/ContractType",
          "description": "The class of contract being constructed, as a Format.Types.ContractType."
        },
        "bytecode": {
          "type": "string",
          "description": "The bytecode of the contract that was created."
        },
        "address": {
          "type": "string",
          "description": "If the contract created was a library, and was compiled with Solidity\n0.4.20 or later, this field will be included, which gives the address of\nthe created contract (checksummed).  This field will not be included\notherwise!"
        }
      },
      "required": [
        "kind",
        "status",
        "decodingMode",
        "class",
        "bytecode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of the return data as bytecode for a known\nclass returned from a constructor.\n\nNOTE: In the future, this type will also contain information about\nany linked libraries the contract being constructed uses.  However,\nthis is not implemented at present."
    },
    "UnknownBytecodeDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "unknownbytecode"
          ],
          "description": "The kind of decoding; indicates that this is an UnknownBytecodeDecoding."
        },
        "status": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Indicates that this kind of decoding indicates a successful return."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        },
        "bytecode": {
          "type": "string",
          "description": "The bytecode of the contract that was created."
        }
      },
      "required": [
        "kind",
        "status",
        "decodingMode",
        "bytecode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of the return data as bytecode for an\nunknown class returned from a constructor.\n\nNOTE: In the future, this type will also contain information about\nany linked libraries the contract being constructed uses.  However,\nthis is not implemented at present."
    },
    "SelfDestructDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "selfdestruct"
          ],
          "description": "The kind of decoding; indicates that this is an SelfDestructDecoding."
        },
        "status": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Indicates that this kind of decoding indicates a successful return."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "status",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of unexpectedly empty return data from a\nsuccessful call, indicating that the contract self-destructed."
    },
    "RevertMessageDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "revert"
          ],
          "description": "The kind of decoding; indicates that this is a RevertMessageDecoding."
        },
        "status": {
          "type": "boolean",
          "enum": [
            false
          ],
          "description": "Indicates that this kind of decoding indicates an unsuccessful return."
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiArgument"
          },
          "description": "The list of decoded arguments passed to revert(); currently, this will\nalways contain just a single string."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "status",
        "arguments",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of the return data as a revert message.\nFor forward-compatibility, we do not assume that the revert message is\na string."
    },
    "EmptyFailureDecoding": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "failure"
          ],
          "description": "The kind of decoding; indicates that this is an EmptyFailureDecoding."
        },
        "status": {
          "type": "boolean",
          "enum": [
            false
          ],
          "description": "Indicates that this kind of decoding indicates an unsuccessful return."
        },
        "decodingMode": {
          "$ref": "#/definitions/DecodingMode",
          "description": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
        }
      },
      "required": [
        "kind",
        "status",
        "decodingMode"
      ],
      "additionalProperties": false,
      "description": "This type represents a decoding of empty return data from an unsuccessful\ncall, a reversion with no message."
    },
    "DecoderRequest": {
      "anyOf": [
        {
          "$ref": "#/definitions/StorageRequest"
        },
        {
          "$ref": "#/definitions/CodeRequest"
        }
      ]
    },
    "StorageRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "storage"
          ]
        },
        "slot": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "type",
        "slot"
      ],
      "additionalProperties": false,
      "description": "A request for storage"
    },
    "CodeRequest": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "code"
          ]
        },
        "address": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "address"
      ],
      "additionalProperties": false,
      "description": "A request for code"
    },
    "DecoderOptions": {
      "type": "object",
      "properties": {
        "permissivePadding": {
          "type": "boolean"
        },
        "strictAbiMode": {
          "type": "boolean"
        },
        "allowRetry": {
          "type": "boolean"
        },
        "abiPointerBase": {
          "type": "number"
        },
        "memoryVisited": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      },
      "additionalProperties": false
    },
    "StorageAllocations": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/StorageAllocation"
      }
    },
    "StorageAllocation": {
      "type": "object",
      "properties": {
        "size": {
          "$ref": "#/definitions/StorageLength"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageMemberAllocation"
          }
        }
      },
      "required": [
        "size",
        "members"
      ],
      "additionalProperties": false
    },
    "StorageMemberAllocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "pointer": {
          "$ref": "#/definitions/StoragePointer"
        }
      },
      "required": [
        "name",
        "type",
        "pointer"
      ],
      "additionalProperties": false
    },
    "Type": {
      "anyOf": [
        {
          "$ref": "#/definitions/UintType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/IntType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BoolType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/BytesType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/AddressType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FixedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/UfixedType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StringType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ArrayType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MappingType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/FunctionType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/StructType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/EnumType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/ContractType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/MagicType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TypeType%3CDefaultFormatConfig%3E"
        },
        {
          "$ref": "#/definitions/TupleType%3CDefaultFormatConfig%3E"
        }
      ],
      "description": "Object representing a type"
    },
    "StoragePointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "storage"
          ]
        },
        "range": {
          "$ref": "#/definitions/Range"
        }
      },
      "required": [
        "location",
        "range"
      ],
      "additionalProperties": false
    },
    "Range": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/StoragePosition%3CDefaultFormatConfig%3E"
        },
        "to": {
          "$ref": "#/definitions/StoragePosition%3CDefaultFormatConfig%3E"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "from"
      ],
      "additionalProperties": false
    },
    "StateAllocations": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/StateAllocation"
        }
      }
    },
    "StateAllocation": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StateVariableAllocation"
          }
        }
      },
      "required": [
        "members"
      ],
      "additionalProperties": false
    },
    "StateVariableAllocation": {
      "type": "object",
      "properties": {
        "definition": {
          "$ref": "#/definitions/AstNode"
        },
        "definedIn": {
          "$ref": "#/definitions/AstNode"
        },
        "compilationId": {
          "type": "string"
        },
        "pointer": {
          "anyOf": [
            {
              "$ref": "#/definitions/StoragePointer"
            },
            {
              "$ref": "#/definitions/ConstantDefinitionPointer"
            }
          ]
        }
      },
      "required": [
        "definition",
        "definedIn",
        "compilationId",
        "pointer"
      ],
      "additionalProperties": false
    },
    "ConstantDefinitionPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "definition"
          ]
        },
        "definition": {
          "$ref": "#/definitions/AstNode"
        }
      },
      "required": [
        "location",
        "definition"
      ],
      "additionalProperties": false
    },
    "MemoryAllocations": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/MemoryAllocation"
      }
    },
    "MemoryAllocation": {
      "type": "object",
      "properties": {
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemoryMemberAllocation"
          }
        }
      },
      "required": [
        "members"
      ],
      "additionalProperties": false
    },
    "MemoryMemberAllocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "pointer": {
          "$ref": "#/definitions/MemoryPointer"
        }
      },
      "required": [
        "name",
        "type",
        "pointer"
      ],
      "additionalProperties": false
    },
    "MemoryPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "memory"
          ]
        },
        "start": {
          "type": "number"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "location",
        "start",
        "length"
      ],
      "additionalProperties": false
    },
    "Contexts": {
      "anyOf": [
        {
          "$ref": "#/definitions/DecoderContexts"
        },
        {
          "$ref": "#/definitions/DebuggerContexts"
        }
      ]
    },
    "DecoderContexts": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/DecoderContext"
      }
    },
    "DecoderContext": {
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        },
        "binary": {
          "type": "string"
        },
        "isConstructor": {
          "type": "boolean"
        },
        "contractName": {
          "type": "string"
        },
        "contractId": {
          "type": "number"
        },
        "contractKind": {
          "$ref": "#/definitions/ContractKind"
        },
        "abi": {
          "$ref": "#/definitions/FunctionAbiBySelectors"
        },
        "payable": {
          "type": "boolean"
        },
        "fallbackAbi": {
          "type": "object",
          "properties": {
            "fallback": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FallbackAbiEntry"
                },
                {
                  "type": "null"
                }
              ]
            },
            "receive": {
              "anyOf": [
                {
                  "$ref": "#/definitions/ReceiveAbiEntry"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "fallback",
            "receive"
          ],
          "additionalProperties": false
        },
        "compiler": {
          "$ref": "#/definitions/CompilerVersion"
        }
      },
      "required": [
        "context",
        "binary",
        "isConstructor"
      ],
      "additionalProperties": false
    },
    "CompilerVersion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DebuggerContexts": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/DebuggerContext"
      }
    },
    "DebuggerContext": {
      "type": "object",
      "properties": {
        "context": {
          "type": "string"
        },
        "binary": {
          "type": "string"
        },
        "isConstructor": {
          "type": "boolean"
        },
        "contractName": {
          "type": "string"
        },
        "contractId": {
          "type": "number"
        },
        "contractKind": {
          "$ref": "#/definitions/ContractKind"
        },
        "abi": {
          "$ref": "#/definitions/Abi"
        },
        "sourceMap": {
          "type": "string"
        },
        "primarySource": {
          "type": "number"
        },
        "compiler": {
          "$ref": "#/definitions/CompilerVersion"
        },
        "compilation": {
          "type": "string"
        },
        "payable": {
          "type": "boolean"
        }
      },
      "required": [
        "context",
        "binary",
        "isConstructor"
      ],
      "additionalProperties": false
    },
    "Context": {
      "anyOf": [
        {
          "$ref": "#/definitions/DecoderContext"
        },
        {
          "$ref": "#/definitions/DebuggerContext"
        }
      ]
    },
    "ContractAllocationInfo": {
      "type": "object",
      "properties": {
        "abi": {
          "$ref": "#/definitions/Abi"
        },
        "contractNode": {
          "$ref": "#/definitions/AstNode"
        },
        "deployedContext": {
          "$ref": "#/definitions/DecoderContext"
        },
        "constructorContext": {
          "$ref": "#/definitions/DecoderContext"
        },
        "compiler": {
          "$ref": "#/definitions/CompilerVersion"
        },
        "compilationId": {
          "type": "string"
        }
      },
      "required": [
        "contractNode",
        "compiler"
      ],
      "additionalProperties": false
    },
    "AbiSizeInfo": {
      "type": "object",
      "properties": {
        "size": {
          "type": "number"
        },
        "dynamic": {
          "type": "boolean"
        }
      },
      "required": [
        "size",
        "dynamic"
      ],
      "additionalProperties": false
    },
    "AbiAllocations": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/AbiAllocation"
          },
          {
            "type": "null"
          }
        ]
      }
    },
    "AbiAllocation": {
      "type": "object",
      "properties": {
        "length": {
          "type": "number"
        },
        "dynamic": {
          "type": "boolean"
        },
        "members": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbiMemberAllocation"
          }
        }
      },
      "required": [
        "length",
        "dynamic",
        "members"
      ],
      "additionalProperties": false
    },
    "AbiMemberAllocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "pointer": {
          "$ref": "#/definitions/GenericAbiPointer"
        }
      },
      "required": [
        "name",
        "type",
        "pointer"
      ],
      "additionalProperties": false
    },
    "GenericAbiPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "abi"
          ]
        },
        "start": {
          "type": "number"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "location",
        "start",
        "length"
      ],
      "additionalProperties": false
    },
    "CalldataAllocations": {
      "type": "object",
      "properties": {
        "constructorAllocations": {
          "$ref": "#/definitions/CalldataConstructorAllocations"
        },
        "functionAllocations": {
          "$ref": "#/definitions/CalldataFunctionAllocations"
        }
      },
      "required": [
        "constructorAllocations",
        "functionAllocations"
      ],
      "additionalProperties": false
    },
    "CalldataConstructorAllocations": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/CalldataAndReturndataAllocation"
      }
    },
    "CalldataAndReturndataAllocation": {
      "type": "object",
      "properties": {
        "input": {
          "$ref": "#/definitions/CalldataAllocation"
        },
        "output": {
          "$ref": "#/definitions/ReturndataAllocation"
        }
      },
      "required": [
        "input",
        "output"
      ],
      "additionalProperties": false
    },
    "CalldataAllocation": {
      "type": "object",
      "properties": {
        "abi": {
          "anyOf": [
            {
              "$ref": "#/definitions/FunctionAbiEntry"
            },
            {
              "$ref": "#/definitions/ConstructorAbiEntry"
            }
          ]
        },
        "offset": {
          "type": "number"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalldataArgumentAllocation"
          }
        },
        "allocationMode": {
          "$ref": "#/definitions/DecodingMode"
        }
      },
      "required": [
        "abi",
        "offset",
        "arguments",
        "allocationMode"
      ],
      "additionalProperties": false
    },
    "CalldataArgumentAllocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "pointer": {
          "$ref": "#/definitions/CalldataPointer"
        }
      },
      "required": [
        "name",
        "type",
        "pointer"
      ],
      "additionalProperties": false
    },
    "CalldataPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "calldata"
          ]
        },
        "start": {
          "type": "number"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "location",
        "start",
        "length"
      ],
      "additionalProperties": false
    },
    "ReturndataAllocation": {
      "type": "object",
      "properties": {
        "selector": {
          "type": "object",
          "properties": {
            "BYTES_PER_ELEMENT": {
              "type": "number"
            },
            "buffer": {
              "type": "object",
              "properties": {
                "byteLength": {
                  "type": "number"
                }
              },
              "required": [
                "byteLength"
              ],
              "additionalProperties": false
            },
            "byteLength": {
              "type": "number"
            },
            "byteOffset": {
              "type": "number"
            },
            "length": {
              "type": "number"
            }
          },
          "required": [
            "BYTES_PER_ELEMENT",
            "buffer",
            "byteLength",
            "byteOffset",
            "length"
          ],
          "additionalProperties": {
            "type": "number"
          }
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReturndataArgumentAllocation"
          }
        },
        "allocationMode": {
          "$ref": "#/definitions/DecodingMode"
        },
        "kind": {
          "type": "string",
          "enum": [
            "return",
            "revert",
            "failure",
            "selfdestruct",
            "bytecode"
          ]
        }
      },
      "required": [
        "selector",
        "arguments",
        "allocationMode",
        "kind"
      ],
      "additionalProperties": false
    },
    "ReturndataArgumentAllocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "pointer": {
          "$ref": "#/definitions/ReturndataPointer"
        }
      },
      "required": [
        "name",
        "type",
        "pointer"
      ],
      "additionalProperties": false
    },
    "ReturndataPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "returndata"
          ]
        },
        "start": {
          "type": "number"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "location",
        "start",
        "length"
      ],
      "additionalProperties": false
    },
    "CalldataFunctionAllocations": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/CalldataAndReturndataAllocation"
        }
      }
    },
    "EventAllocations": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "properties": {
          "bySelector": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EventAllocation"
                  }
                }
              }
            }
          },
          "anonymous": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/EventAllocation"
                }
              }
            }
          }
        },
        "required": [
          "bySelector",
          "anonymous"
        ],
        "additionalProperties": false
      }
    },
    "EventAllocation": {
      "type": "object",
      "properties": {
        "abi": {
          "$ref": "#/definitions/EventAbiEntry"
        },
        "contextHash": {
          "type": "string"
        },
        "definedIn": {
          "$ref": "#/definitions/ContractType"
        },
        "anonymous": {
          "type": "boolean"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventArgumentAllocation"
          }
        },
        "allocationMode": {
          "$ref": "#/definitions/DecodingMode"
        }
      },
      "required": [
        "abi",
        "contextHash",
        "anonymous",
        "arguments",
        "allocationMode"
      ],
      "additionalProperties": false
    },
    "EventArgumentAllocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/Type"
        },
        "pointer": {
          "anyOf": [
            {
              "$ref": "#/definitions/EventDataPointer"
            },
            {
              "$ref": "#/definitions/EventTopicPointer"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "pointer"
      ],
      "additionalProperties": false
    },
    "EventDataPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "eventdata"
          ]
        },
        "start": {
          "type": "number"
        },
        "length": {
          "type": "number"
        }
      },
      "required": [
        "location",
        "start",
        "length"
      ],
      "additionalProperties": false
    },
    "EventTopicPointer": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "enum": [
            "eventtopic"
          ]
        },
        "topic": {
          "type": "number"
        }
      },
      "required": [
        "location",
        "topic"
      ],
      "additionalProperties": false
    },
    "EventAllocationTemporary": {
      "type": "object",
      "properties": {
        "selector": {
          "type": "string"
        },
        "anonymous": {
          "type": "boolean"
        },
        "topics": {
          "type": "number"
        },
        "allocation": {
          "$ref": "#/definitions/EventAllocation"
        }
      },
      "required": [
        "selector",
        "anonymous",
        "topics"
      ],
      "additionalProperties": false
    },
    "CalldataAllocationTemporary": {
      "type": "object",
      "properties": {
        "constructorAllocation": {
          "$ref": "#/definitions/CalldataAndReturndataAllocation"
        },
        "functionAllocations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CalldataAndReturndataAllocation"
          }
        }
      },
      "required": [
        "functionAllocations"
      ],
      "additionalProperties": false
    },
    "TypeParamOverridePlugin": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Converter"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "ConverterComponent": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Converter"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "AbstractComponent<Converter>": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Converter"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ],
      "additionalProperties": false
    },
    "EventDispatcher": {
      "type": "object",
      "additionalProperties": false
    },
    "ComponentHost": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application"
      ],
      "additionalProperties": false
    },
    "Application": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        },
        "options": {
          "$ref": "#/definitions/Options"
        },
        "converter": {
          "$ref": "#/definitions/Converter"
        },
        "renderer": {
          "$ref": "#/definitions/Renderer"
        },
        "serializer": {
          "$ref": "#/definitions/Serializer"
        },
        "logger": {
          "$ref": "#/definitions/Logger"
        },
        "plugins": {
          "$ref": "#/definitions/PluginHost"
        },
        "loggerType": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "prototype": {},
                "length": {
                  "type": "number"
                },
                "arguments": {},
                "caller": {
                  "$ref": "#/definitions/interface-942026824-9821-11285-942026824-0-208502"
                }
              },
              "required": [
                "prototype",
                "length",
                "arguments",
                "caller"
              ],
              "additionalProperties": false
            }
          ]
        },
        "ignoreCompilerErrors": {
          "type": "boolean"
        },
        "exclude": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isCLI": {
          "type": "boolean"
        }
      },
      "required": [
        "application",
        "componentName",
        "converter",
        "exclude",
        "ignoreCompilerErrors",
        "isCLI",
        "logger",
        "loggerType",
        "options",
        "owner",
        "plugins",
        "renderer",
        "serializer"
      ],
      "additionalProperties": false
    },
    "ChildableComponent<class-105839486-385-1383-105839486-0-1384,AbstractComponent<class-105839486-385-1383-105839486-0-1384>>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "AbstractComponent<class-105839486-385-1383-105839486-0-1384>": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ],
      "additionalProperties": false
    },
    "Options": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "ChildableComponent<class-105839486-385-1383-105839486-0-1384,OptionsComponent>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "Renderer": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        },
        "theme": {
          "$ref": "#/definitions/Theme"
        },
        "themeName": {
          "type": "string"
        },
        "disableOutputCheck": {
          "type": "boolean"
        },
        "gaID": {
          "type": "string"
        },
        "gaSite": {
          "type": "string"
        },
        "hideGenerator": {
          "type": "boolean"
        },
        "entryPoint": {
          "type": "string"
        },
        "toc": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "application",
        "componentName",
        "disableOutputCheck",
        "entryPoint",
        "gaID",
        "gaSite",
        "hideGenerator",
        "owner",
        "themeName",
        "toc"
      ],
      "additionalProperties": false
    },
    "ChildableComponent<class-105839486-385-1383-105839486-0-1384,RendererComponent>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "Theme": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Renderer"
        },
        "basePath": {
          "type": "string"
        },
        "resources": {
          "$ref": "#/definitions/Resources"
        }
      },
      "required": [
        "application",
        "basePath",
        "componentName",
        "owner",
        "resources"
      ],
      "additionalProperties": false
    },
    "RendererComponent": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Renderer"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "AbstractComponent<class-1779039827-252-792-1779039827-0-813>": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Renderer"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ],
      "additionalProperties": false
    },
    "Resources": {
      "type": "object",
      "properties": {
        "templates": {
          "$ref": "#/definitions/TemplateStack"
        },
        "layouts": {
          "$ref": "#/definitions/TemplateStack"
        },
        "partials": {
          "$ref": "#/definitions/PartialStack"
        },
        "helpers": {
          "$ref": "#/definitions/HelperStack"
        }
      },
      "required": [
        "templates",
        "layouts",
        "partials",
        "helpers"
      ],
      "additionalProperties": false
    },
    "TemplateStack": {
      "type": "object",
      "additionalProperties": false,
      "properties": {}
    },
    "ResourceStack<Template>": {
      "type": "object",
      "additionalProperties": false
    },
    "PartialStack": {
      "type": "object",
      "additionalProperties": false,
      "properties": {}
    },
    "HelperStack": {
      "type": "object",
      "additionalProperties": false,
      "properties": {}
    },
    "ResourceStack<Helper>": {
      "type": "object",
      "additionalProperties": false
    },
    "Serializer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "ChildableComponent<class-105839486-385-1383-105839486-0-1384,SerializerComponent<any>>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "Logger": {
      "type": "object",
      "properties": {
        "errorCount": {
          "type": "number"
        }
      },
      "required": [
        "errorCount"
      ],
      "additionalProperties": false
    },
    "PluginHost": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        },
        "plugins": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "application",
        "componentName",
        "owner",
        "plugins"
      ],
      "additionalProperties": false
    },
    "interface-942026824-9821-11285-942026824-0-208502": {
      "type": "object",
      "properties": {
        "prototype": {},
        "length": {
          "type": "number"
        },
        "arguments": {},
        "caller": {
          "$ref": "#/definitions/interface-942026824-9821-11285-942026824-0-208502"
        }
      },
      "required": [
        "prototype",
        "length",
        "arguments",
        "caller"
      ],
      "additionalProperties": false
    },
    "Converter": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        },
        "name": {
          "type": "string"
        },
        "externalPattern": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includeDeclarations": {
          "type": "boolean"
        },
        "excludeExternals": {
          "type": "boolean"
        },
        "excludeNotExported": {
          "type": "boolean"
        },
        "excludePrivate": {
          "type": "boolean"
        },
        "excludeProtected": {
          "type": "boolean"
        }
      },
      "required": [
        "application",
        "componentName",
        "excludeExternals",
        "excludeNotExported",
        "excludePrivate",
        "excludeProtected",
        "externalPattern",
        "includeDeclarations",
        "name",
        "owner"
      ],
      "additionalProperties": false
    },
    "ChildableComponent<Application,class-321736715-310-400-321736715-0-1345>": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ]
    },
    "AbstractComponent<Application>": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "componentName": {
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Application"
        }
      },
      "required": [
        "application",
        "componentName",
        "owner"
      ],
      "additionalProperties": false
    }
  }
}