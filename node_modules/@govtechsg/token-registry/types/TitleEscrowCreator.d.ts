/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import {Contract, ContractTransaction, EventFilter, Signer} from "ethers";
import {Listener, Provider} from "ethers/providers";
import {Arrayish, BigNumber, BigNumberish, Interface} from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription
} from ".";

interface TitleEscrowCreatorInterface extends Interface {
  functions: {
    deployNewTitleEscrow: TypedFunctionDescription<{
      encode([tokenRegistry, beneficiary, holder]: [
        string,
        string,
        string
      ]): string;
    }>;
  };

  events: {
    TitleEscrowDeployed: TypedEventDescription<{
      encodeTopics([escrowAddress, tokenRegistry, beneficiary, holder]: [
        string | null,
        string | null,
        null,
        null
      ]): string[];
    }>;
  };
}

export class TitleEscrowCreator extends Contract {
  connect(signerOrProvider: Signer | Provider | string): TitleEscrowCreator;
  attach(addressOrName: string): TitleEscrowCreator;
  deployed(): Promise<TitleEscrowCreator>;

  on(event: EventFilter | string, listener: Listener): TitleEscrowCreator;
  once(event: EventFilter | string, listener: Listener): TitleEscrowCreator;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): TitleEscrowCreator;
  removeAllListeners(eventName: EventFilter | string): TitleEscrowCreator;
  removeListener(eventName: any, listener: Listener): TitleEscrowCreator;

  interface: TitleEscrowCreatorInterface;

  functions: {
    deployNewTitleEscrow(
      tokenRegistry: string,
      beneficiary: string,
      holder: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  deployNewTitleEscrow(
    tokenRegistry: string,
    beneficiary: string,
    holder: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    TitleEscrowDeployed(
      escrowAddress: string | null,
      tokenRegistry: string | null,
      beneficiary: null,
      holder: null
    ): EventFilter;
  };

  estimate: {
    deployNewTitleEscrow(
      tokenRegistry: string,
      beneficiary: string,
      holder: string
    ): Promise<BigNumber>;
  };
}
