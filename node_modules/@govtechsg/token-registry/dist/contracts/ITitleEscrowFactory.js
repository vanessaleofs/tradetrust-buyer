"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ITitleEscrowFactory = void 0;

var _ethers = require("ethers");

/* Generated by ts-generator ver. 0.0.8 */

/* tslint:disable */
class ITitleEscrowFactory {
  static connect(address, signerOrProvider) {
    return new _ethers.Contract(address, _abi, signerOrProvider);
  }

}

exports.ITitleEscrowFactory = ITitleEscrowFactory;
const _abi = [{
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_tokenRegistry",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "TitleCeded",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "_tokenRegistry",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "uint256",
    name: "_id",
    type: "uint256"
  }],
  name: "TitleReceived",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "uint256",
    name: "_tokenid",
    type: "uint256"
  }, {
    indexed: true,
    internalType: "address",
    name: "_from",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "_to",
    type: "address"
  }],
  name: "TransferOwnerApproval",
  type: "event"
}, {
  anonymous: false,
  inputs: [{
    indexed: true,
    internalType: "address",
    name: "newBeneficiary",
    type: "address"
  }, {
    indexed: true,
    internalType: "address",
    name: "newHolder",
    type: "address"
  }],
  name: "TransferTitleEscrowApproval",
  type: "event"
}, {
  constant: false,
  inputs: [{
    internalType: "address",
    name: "operator",
    type: "address"
  }, {
    internalType: "address",
    name: "from",
    type: "address"
  }, {
    internalType: "uint256",
    name: "tokenId",
    type: "uint256"
  }, {
    internalType: "bytes",
    name: "data",
    type: "bytes"
  }],
  name: "onERC721Received",
  outputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [{
    internalType: "address",
    name: "newHolder",
    type: "address"
  }],
  name: "changeHolder",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [{
    internalType: "address",
    name: "newOwner",
    type: "address"
  }],
  name: "approveNewOwner",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [{
    internalType: "address",
    name: "newBeneficiary",
    type: "address"
  }],
  name: "transferTo",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "approvedOwner",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "approvedBeneficiary",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "approvedHolder",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "beneficiary",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "holder",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "status",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: true,
  inputs: [{
    internalType: "bytes4",
    name: "",
    type: "bytes4"
  }],
  name: "supportsInterface",
  outputs: [{
    internalType: "bool",
    name: "",
    type: "bool"
  }],
  payable: false,
  stateMutability: "view",
  type: "function"
}, {
  constant: false,
  inputs: [],
  name: "tokenRegistry",
  outputs: [{
    internalType: "address",
    name: "",
    type: "address"
  }],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [{
    internalType: "address",
    name: "newBeneficiary",
    type: "address"
  }, {
    internalType: "address",
    name: "newHolder",
    type: "address"
  }],
  name: "transferToNewEscrow",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}, {
  constant: false,
  inputs: [{
    internalType: "address",
    name: "newBeneficiary",
    type: "address"
  }, {
    internalType: "address",
    name: "newHolder",
    type: "address"
  }],
  name: "approveNewTransferTargets",
  outputs: [],
  payable: false,
  stateMutability: "nonpayable",
  type: "function"
}];