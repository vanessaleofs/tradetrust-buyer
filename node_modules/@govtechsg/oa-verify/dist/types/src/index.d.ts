import { v2, v3, WrappedDocument } from "@govtechsg/open-attestation";
import { verificationBuilder } from "./verifiers/verificationBuilder";
import { Verifier } from "./types/core";
import { openAttestationHash } from "./verifiers/hash/openAttestationHash";
import { openAttestationDnsTxt, Identity } from "./verifiers/dnsText/openAttestationDnsTxt";
import { openAttestationEthereumDocumentStoreIssued } from "./verifiers/documentStoreIssued/openAttestationEthereumDocumentStoreIssued";
import { openAttestationEthereumDocumentStoreRevoked } from "./verifiers/documentStoreRevoked/openAttestationEthereumDocumentStoreRevoked";
import { isValid } from "./validator";
import { openAttestationEthereumTokenRegistryMinted } from "./verifiers/tokenRegistryMinted/openAttestationEthereumTokenRegistryMinted";
declare const openAttestationVerifiers: Verifier<WrappedDocument<v2.OpenAttestationDocument> | WrappedDocument<v3.OpenAttestationDocument>>[];
declare const verify: (document: WrappedDocument<v3.OpenAttestationDocument> | WrappedDocument<v2.OpenAttestationDocument>, options: import("./types/core").VerificationManagerOptions) => Promise<import("./types/core").VerificationFragment<any>[]>;
export * from "./types/core";
export * from "./types/error";
export { verificationBuilder, openAttestationVerifiers, isValid, verify, Verifier, Identity, openAttestationHash, openAttestationEthereumDocumentStoreRevoked, openAttestationEthereumDocumentStoreIssued, openAttestationDnsTxt, openAttestationEthereumTokenRegistryMinted };
