// NEVER EVER REPLACE OR CHANGE A VALUE :)
// code for errors and invalid fragment
export var OpenAttestationEthereumDocumentStoreIssuedCode;
(function (OpenAttestationEthereumDocumentStoreIssuedCode) {
    OpenAttestationEthereumDocumentStoreIssuedCode[OpenAttestationEthereumDocumentStoreIssuedCode["UNEXPECTED_ERROR"] = 0] = "UNEXPECTED_ERROR";
    OpenAttestationEthereumDocumentStoreIssuedCode[OpenAttestationEthereumDocumentStoreIssuedCode["DOCUMENT_NOT_ISSUED"] = 1] = "DOCUMENT_NOT_ISSUED";
    OpenAttestationEthereumDocumentStoreIssuedCode[OpenAttestationEthereumDocumentStoreIssuedCode["CONTRACT_ADDRESS_INVALID"] = 2] = "CONTRACT_ADDRESS_INVALID";
    OpenAttestationEthereumDocumentStoreIssuedCode[OpenAttestationEthereumDocumentStoreIssuedCode["ETHERS_UNHANDLED_ERROR"] = 3] = "ETHERS_UNHANDLED_ERROR";
    OpenAttestationEthereumDocumentStoreIssuedCode[OpenAttestationEthereumDocumentStoreIssuedCode["SKIPPED"] = 4] = "SKIPPED";
    OpenAttestationEthereumDocumentStoreIssuedCode[OpenAttestationEthereumDocumentStoreIssuedCode["CONTRACT_NOT_FOUND"] = 404] = "CONTRACT_NOT_FOUND";
})(OpenAttestationEthereumDocumentStoreIssuedCode || (OpenAttestationEthereumDocumentStoreIssuedCode = {}));
export var OpenAttestationEthereumDocumentStoreRevokedCode;
(function (OpenAttestationEthereumDocumentStoreRevokedCode) {
    OpenAttestationEthereumDocumentStoreRevokedCode[OpenAttestationEthereumDocumentStoreRevokedCode["UNEXPECTED_ERROR"] = 0] = "UNEXPECTED_ERROR";
    OpenAttestationEthereumDocumentStoreRevokedCode[OpenAttestationEthereumDocumentStoreRevokedCode["DOCUMENT_REVOKED"] = 1] = "DOCUMENT_REVOKED";
    OpenAttestationEthereumDocumentStoreRevokedCode[OpenAttestationEthereumDocumentStoreRevokedCode["CONTRACT_ADDRESS_INVALID"] = 2] = "CONTRACT_ADDRESS_INVALID";
    OpenAttestationEthereumDocumentStoreRevokedCode[OpenAttestationEthereumDocumentStoreRevokedCode["ETHERS_UNHANDLED_ERROR"] = 3] = "ETHERS_UNHANDLED_ERROR";
    OpenAttestationEthereumDocumentStoreRevokedCode[OpenAttestationEthereumDocumentStoreRevokedCode["SKIPPED"] = 4] = "SKIPPED";
    OpenAttestationEthereumDocumentStoreRevokedCode[OpenAttestationEthereumDocumentStoreRevokedCode["CONTRACT_NOT_FOUND"] = 404] = "CONTRACT_NOT_FOUND";
})(OpenAttestationEthereumDocumentStoreRevokedCode || (OpenAttestationEthereumDocumentStoreRevokedCode = {}));
export var OpenAttestationEthereumTokenRegistryMintedCode;
(function (OpenAttestationEthereumTokenRegistryMintedCode) {
    OpenAttestationEthereumTokenRegistryMintedCode[OpenAttestationEthereumTokenRegistryMintedCode["UNEXPECTED_ERROR"] = 0] = "UNEXPECTED_ERROR";
    OpenAttestationEthereumTokenRegistryMintedCode[OpenAttestationEthereumTokenRegistryMintedCode["DOCUMENT_NOT_MINTED"] = 1] = "DOCUMENT_NOT_MINTED";
    OpenAttestationEthereumTokenRegistryMintedCode[OpenAttestationEthereumTokenRegistryMintedCode["CONTRACT_ADDRESS_INVALID"] = 2] = "CONTRACT_ADDRESS_INVALID";
    OpenAttestationEthereumTokenRegistryMintedCode[OpenAttestationEthereumTokenRegistryMintedCode["ETHERS_UNHANDLED_ERROR"] = 3] = "ETHERS_UNHANDLED_ERROR";
    OpenAttestationEthereumTokenRegistryMintedCode[OpenAttestationEthereumTokenRegistryMintedCode["SKIPPED"] = 4] = "SKIPPED";
    OpenAttestationEthereumTokenRegistryMintedCode[OpenAttestationEthereumTokenRegistryMintedCode["CONTRACT_NOT_FOUND"] = 404] = "CONTRACT_NOT_FOUND";
})(OpenAttestationEthereumTokenRegistryMintedCode || (OpenAttestationEthereumTokenRegistryMintedCode = {}));
export var OpenAttestationDnsTxtCode;
(function (OpenAttestationDnsTxtCode) {
    OpenAttestationDnsTxtCode[OpenAttestationDnsTxtCode["UNEXPECTED_ERROR"] = 0] = "UNEXPECTED_ERROR";
    OpenAttestationDnsTxtCode[OpenAttestationDnsTxtCode["INVALID_IDENTITY"] = 1] = "INVALID_IDENTITY";
    OpenAttestationDnsTxtCode[OpenAttestationDnsTxtCode["SKIPPED"] = 2] = "SKIPPED";
})(OpenAttestationDnsTxtCode || (OpenAttestationDnsTxtCode = {}));
export var OpenAttestationHashCode;
(function (OpenAttestationHashCode) {
    OpenAttestationHashCode[OpenAttestationHashCode["DOCUMENT_TAMPERED"] = 0] = "DOCUMENT_TAMPERED";
})(OpenAttestationHashCode || (OpenAttestationHashCode = {}));
