"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var ethers = __importStar(require("ethers"));
var config_1 = require("../../config");
var logger_1 = require("../logger");
var logger = logger_1.getLogger("contractInstance");
exports.getProvider = function (options) {
    return new ethers.providers.InfuraProvider(options.network, config_1.INFURA_API_KEY);
};
exports.contractInstance = function (options) {
    var contract = new ethers.Contract(options.contractAddress, options.abi, exports.getProvider(options));
    // this is done to prevent uncaught exception to raise because an address is invalid
    contract.addressPromise.catch(function () {
        logger.trace("oa-verify caught an error from ethers when trying to resolve the address of the provided address " + options.contractAddress);
    });
    return contract;
};
